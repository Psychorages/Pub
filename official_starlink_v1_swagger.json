{
  "openapi": "3.0.1",
  "info": {
    "title": "Starlink Enterprise API",
    "description": "<h3>Description</h3>API to manage accounts and user terminals. This page is deprecated, please use the new documentation site: <a href='https://starlink.readme.io/'>https://starlink.readme.io/</a><h3>Authentication - Cookie</h3><ul><li>To authenticate with this API using a browser cookie, <a href='https://api.starlink.com/auth-rp/auth/login?returnUrl=https://web-api.starlink.com/enterprise/swagger/index.html'>login here</a> and your cookie will be automatically attached to requests.</li><li><em>If you are already logged in, you'll be redirected back to this page</em></li></ul><h3>Authentication - OIDC</h3><p>To authenticate with this API using OIDC, <a target='_blank' href='https://api.starlink.com/auth/.well-known/openid-configuration'>Well Known URL</a> and attach the result to your requests with the <strong>Authorize</strong> button below.</p>",
    "version": "1"
  },
  "paths": {
    "/enterprise/v1/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get accounts",
        "description": "Get paginated accounts of the current authenticated user.",
        "parameters": [
          {
            "name": "regionCode",
            "in": "query",
            "description": "The region code of the account",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of accounts to return at a time",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The index of the page, starting at 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving accounts for this user"
          },
          "422": {
            "description": "Failed to retrieve accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponsePaginatedServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/accounts/{accountNumber}/update-default-router-config": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Set default router config",
        "description": "Set the default router config on the account. Use an empty string to remove the default\r\nconfig from the account. Any new routers on this account will be assigned this config.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "UpdateDefaultConfigRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDefaultConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated default config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The user must have API access and be on the account."
          },
          "422": {
            "description": "Failed to assign the config. The config may not be on the account, or not be a valid default config."
          }
        }
      }
    },
    "/enterprise/v1/accounts/{accountNumber}/billing-cycles/query": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get data usage",
        "description": "Retrieve the real-time data tracking system for an account's data usage data.\r\nFor detailed instructions, please refer to the API documentation: https://starlink.readme.io/docs/data-usage-api",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "QueryBillingCycleRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryBillingCycleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineDataUsageForBillingCyclesPaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Client Error"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/addresses": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Get all addresses",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "addressIds",
            "in": "query",
            "description": "Filter by a specific set of Address Reference IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "Filter by metadata",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of addresses to return at a time",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The index of the page, starting at 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Addresses retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from getting addresses for this account"
          },
          "422": {
            "description": "Failed to retrieve addresses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponsePaginatedServiceResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Create address",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          }
        ],
        "requestBody": {
          "description": "AddressCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from creating an address for this account"
          },
          "422": {
            "description": "Failed to create the address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseServiceResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Address"
        ],
        "summary": "Update address",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          }
        ],
        "requestBody": {
          "description": "AddressUpdateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Address updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from updating this address"
          },
          "422": {
            "description": "Failed to update the address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/addresses/{addressReferenceId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "summary": "Get address",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "addressReferenceId",
            "in": "path",
            "description": "Address reference ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "55ec6574-10d8-bd9c-1951-d4184f4ae467"
          }
        ],
        "responses": {
          "200": {
            "description": "Address retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from getting the address for this account"
          },
          "422": {
            "description": "Failed to get the address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddressResponseServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/addresses/check-capacity": {
      "post": {
        "tags": [
          "Address"
        ],
        "summary": "Check capacity",
        "description": "Check Starlink network capacity at a specific coordinate.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          }
        ],
        "requestBody": {
          "description": "CapacityCheckRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CapacityCheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Received service capacity at these coordinates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityCheckResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from checking capacity for this account"
          },
          "422": {
            "description": "Failed to check capacity for this address",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CapacityCheckResponseServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/{routerId}": {
      "get": {
        "tags": [
          "Router"
        ],
        "summary": "Get router",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "routerId",
            "in": "path",
            "description": "Router Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "010000000000000000012345"
          }
        ],
        "responses": {
          "200": {
            "description": "RouterResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router is not on the account."
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/{routerId}/config": {
      "delete": {
        "tags": [
          "Router"
        ],
        "summary": "Remove config assignment",
        "description": "Remove the config assignment on the router. The config itself will still exist. The router will no longer\r\nget its config from the cloud, and its config may be changed in the Starlink app or via factory reset.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "routerId",
            "in": "path",
            "description": "Router Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "010000000000000000012345"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router or config is not on the account."
          }
        }
      },
      "put": {
        "tags": [
          "Router"
        ],
        "summary": "Set config assignment",
        "description": "Assign the config to the router. If the router is currently online, the config will immediately be\r\nsent to the router. Else, the config will be sent to the router when it comes online. Configs are sent to the\r\nrouter within 1-2 minutes.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "routerId",
            "in": "path",
            "description": "Router Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "010000000000000000012345"
          }
        ],
        "requestBody": {
          "description": "Config Id",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              },
              "example": "DVC_CFG-12341234"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router or config is not on the account."
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/configs": {
      "get": {
        "tags": [
          "Router"
        ],
        "summary": "Get all router configs",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to get",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated RouterConfigResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterConfigResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you probably don't have access to this account"
          }
        }
      },
      "post": {
        "tags": [
          "Router"
        ],
        "summary": "Create router config",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router config",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          }
        ],
        "requestBody": {
          "description": "RouterConfigRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterConfigResponseServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterConfigResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router or config is not on the account."
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/configs/{configId}": {
      "get": {
        "tags": [
          "Router"
        ],
        "summary": "Get router config",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router config",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "configId",
            "in": "path",
            "description": "Config Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "DVC_CFG-12341234"
          }
        ],
        "responses": {
          "200": {
            "description": "RouterConfigResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterConfigResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the config is not on the account."
          }
        }
      },
      "put": {
        "tags": [
          "Router"
        ],
        "summary": "Update router config",
        "description": "Update a given router config. Any router assigned to this config will\r\nimmediately recieve the update if they are online. Else, the router will recieve\r\nthe update when it comes online.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router config",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "configId",
            "in": "path",
            "description": "Config Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "DVC_CFG-12341234"
          }
        ],
        "requestBody": {
          "description": "RouterConfigRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RouterConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "RouterConfigResponse",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterConfigResponseServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouterConfigResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router or config is not on the account."
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/sandbox/clients": {
      "get": {
        "tags": [
          "Router"
        ],
        "summary": "Get sandbox clients.",
        "description": "Returns clients that were unsandboxed through the management API and have access that\r\nhas not yet expired. Clients that are allowed internet access due to sandbox disablement\r\nare not returned.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of sandbox",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "sandboxId",
            "in": "query",
            "description": "Sandbox Id",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          },
          {
            "name": "expiryAfter",
            "in": "query",
            "description": "Include clients whose access expires after this time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2020-01-01T01:00:00+00:00"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page to get",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of sandbox clients to return at a time",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable, the request contents are invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/sandbox/client": {
      "post": {
        "tags": [
          "Router"
        ],
        "summary": "Update sandbox client",
        "description": "Update the sandbox state for a specific client. If sandbox is enabled, the client will only have access\r\nto the router's configured sandbox domains.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of sandbox",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          }
        ],
        "requestBody": {
          "description": "UpdateSandboxClientRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSandboxClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable, the request contents are invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/sandbox/{sandboxId}": {
      "put": {
        "tags": [
          "Router"
        ],
        "summary": "Update sandbox",
        "description": "Enable or disable a client sandbox. This applies to all router configs the sandbox ID is present in.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of sandbox",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "sandboxId",
            "in": "path",
            "description": "Sandbox Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 123
          }
        ],
        "requestBody": {
          "description": "UpdateSandboxRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSandboxRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSandboxResponseServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable, the request contents are invalid",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSandboxResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, either you don't have access to the account or the router"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/routers/{routerId}/reboot": {
      "post": {
        "tags": [
          "Router"
        ],
        "summary": "Reboot router",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of router",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "routerId",
            "in": "path",
            "description": "Router Id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "010000000000000000012345"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable, router not on account or reboot failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have access to the account."
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}": {
      "get": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Get service line",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "responses": {
          "200": {
            "description": "Service line retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving the service line for this account"
          },
          "422": {
            "description": "Failed to retrieve the service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponseServiceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Deactivate a service line",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          },
          {
            "name": "reasonForCancellation",
            "in": "query",
            "description": "Optional reason for cancelling this service line",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endNow",
            "in": "query",
            "description": "If service should end now, or on next bill day. Default is false",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deactivated the service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from deactivating the service line for this account"
          },
          "422": {
            "description": "Failed to deactivate the service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines": {
      "get": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Get all service lines",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "addressReferenceId",
            "in": "query",
            "description": "Filter by an Address Reference ID",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "55ec6574-10d8-bd9c-1951-d4184f4ae467"
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Filter by partial match of UT ID, serial number, or kit serial number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of service lines to return at a time",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The index of the page, starting at 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "orderByCreatedDateDescending",
            "in": "query",
            "description": "Sort the paginated results by created date",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service lines retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving service lines for this account"
          },
          "422": {
            "description": "Failed to retrieve service lines",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponsePaginatedServiceResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Create service line",
        "description": "Create a service line. This must be linked to an address and a subscription/product-ID.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          }
        ],
        "requestBody": {
          "description": "ServiceLineCreateRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceLineCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Service line created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from creating service line in this account"
          },
          "422": {
            "description": "Failed to create service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponseServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/nickname": {
      "put": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Update nickname",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "requestBody": {
          "description": "ServiceLineUpdateNicknameRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceLineUpdateNicknameRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponseServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/product/{productReferenceId}": {
      "put": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Update product",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          },
          {
            "name": "productReferenceId",
            "in": "path",
            "description": "The unique reference id of the product to update to",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "business-100"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceLineResponseServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/public-ip": {
      "put": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Set public IP",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "requestBody": {
          "description": "ServiceLineSetPublicIpRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceLineSetPublicIpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/billing-cycle/all": {
      "get": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Get data usage",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          },
          {
            "name": "includeUnknownDataBin",
            "in": "query",
            "description": "When true; unknown data bins will be included in results.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataUsageResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/billing-cycle/partial-periods": {
      "get": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Get partial periods",
        "description": "Get the previous partial periods for this service line. For more information about this endpoint, see https://starlink.readme.io/docs/understanding-proration.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartialPeriodResponseIEnumerableServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/opt-in": {
      "post": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Opt in",
        "description": "Opt in the service line to continue using priority data after reaching the plan capacity.\r\nOnly applies to some products.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptInPeriodResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving the subscription for this account"
          },
          "422": {
            "description": "Failed to retrieve subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptInPeriodResponseServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/{serviceLineNumber}/opt-out": {
      "delete": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Opt out",
        "description": "Opt out the service line. If the service line reaches the plan capacity, it will switch to using standard data.\r\nOnly applies to some products.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptInPeriodResponseServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving the subscription for this account"
          },
          "422": {
            "description": "Failed to retrieve subscription",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptInPeriodResponseServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/service-lines/available-products": {
      "get": {
        "tags": [
          "ServiceLine"
        ],
        "summary": "Get available products",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "activeLines",
            "in": "query",
            "description": "Optional filter to return only include lines that are active (start date in past, end date null or in-future",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of subscriptions to return at a time",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The index of the page, starting at 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "204": {
            "description": "Success"
          },
          "200": {
            "description": "Subscription products retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionProductResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionProductResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Failed to retrieve subscriptions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionProductResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving subscriptions for this account"
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/user-terminals": {
      "get": {
        "tags": [
          "UserTerminal"
        ],
        "summary": "Get all user terminals",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "serviceLineNumbers",
            "in": "query",
            "description": "Filter by a set of service line numbers",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "userTerminalIds",
            "in": "query",
            "description": "Filter by a set of user terminal IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "hasServiceLine",
            "in": "query",
            "description": "Filter by user terminals with or without a services lines. Omitting this will return both sets",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "only return UTs that are active on this account",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "searchString",
            "in": "query",
            "description": "Filter by partial match of UT ID, serial number, or kit serial number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of user terminals to return at a time",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The index of the page, starting at 0",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User terminals retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTerminalResponsePaginatedServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from retrieving user terminals"
          },
          "422": {
            "description": "Failed to retrieve user terminals",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserTerminalResponsePaginatedServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/user-terminals/{deviceId}": {
      "post": {
        "tags": [
          "UserTerminal"
        ],
        "summary": "Add to account",
        "description": "Add a user terminal to an account. This will add the user terminal to the account, but won't start service.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "UTID, kit serial number, or dish serial number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345678-12345678-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "User terminal added to account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from adding the user terminal to account"
          },
          "422": {
            "description": "Failed to add the user terminal to the account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserTerminal"
        ],
        "summary": "Remove from account",
        "description": "Remove a user terminal from the account.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of user terminal",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "UTID, kit serial number, or dish serial number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345678-12345678-12345678"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/user-terminals/{userTerminalId}/{serviceLineNumber}": {
      "post": {
        "tags": [
          "UserTerminal"
        ],
        "summary": "Add to service line",
        "description": "Add a user terminal to a service line.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "userTerminalId",
            "in": "path",
            "description": "User terminal ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345678-12345678-12345678"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "responses": {
          "200": {
            "description": "User terminals added to service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from adding the user terminal to the service line"
          },
          "422": {
            "description": "Failed to add the user terminal to the service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserTerminal"
        ],
        "summary": "Remove from service line",
        "description": "Remove a user terminal from a service line.",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of service line",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "userTerminalId",
            "in": "path",
            "description": "User terminal ID",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345678-12345678-12345678"
          },
          {
            "name": "serviceLineNumber",
            "in": "path",
            "description": "Service line number",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "AST-511274-31364-54"
          }
        ],
        "responses": {
          "200": {
            "description": "Removed user terminal from service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden from removing user terminal from service line"
          },
          "422": {
            "description": "Failed to remove user terminal from service line",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/enterprise/v1/account/{accountNumber}/user-terminals/{deviceId}/reboot": {
      "post": {
        "tags": [
          "UserTerminal"
        ],
        "summary": "Reboot user terminal",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Account number of user terminal",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ACC-1234-1234-1234"
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "UTID, kit serial number, or dish serial number.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345678-12345678-12345678"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden, you don't have access to the account."
          },
          "422": {
            "description": "Unprocessable, user terminal not on account or reboot failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountResponse": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "The Account Number. Example: ACC-511274-31364-54"
          },
          "regionCode": {
            "type": "string",
            "description": "The region code of the account. Example: US"
          },
          "accountName": {
            "type": "string",
            "description": "The name of the account",
            "nullable": true
          },
          "defaultRouterConfigId": {
            "type": "string",
            "description": "Default router config on the account",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountResponsePaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AccountResponsePaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/AccountResponsePaginated"
          }
        },
        "additionalProperties": false
      },
      "AddressCreateRequest": {
        "required": [
          "addressLines",
          "administrativeAreaCode",
          "formattedAddress",
          "latitude",
          "longitude",
          "regionCode"
        ],
        "type": "object",
        "properties": {
          "addressLines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The address lines for the address. Example: 1 Rocket Road"
          },
          "locality": {
            "type": "string",
            "description": "The town/locality of the address. Example: Hawthorne",
            "nullable": true
          },
          "administrativeArea": {
            "type": "string",
            "description": "The administrative area of the address. Example: California",
            "nullable": true
          },
          "administrativeAreaCode": {
            "type": "string",
            "description": "The administrative area code of the address. Example: CA"
          },
          "region": {
            "type": "string",
            "description": "The region of the address. Example: United States",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "description": "The region code of the address. Example: US"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address. Example: 90250-6844",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "description": "Optional field that can be used to store information about the address for external purposes",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "description": "A user readable address. Example: 1 Rocket Road, Hawthorne, CA 90250-6844, US"
          },
          "latitude": {
            "type": "number",
            "description": "The required latitude of the address. Example: 33.92",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The required longitude of the address. Example: -118.32",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "addressReferenceId": {
            "type": "string",
            "description": "Reference identifier for address. Example: 55ec6574-10d8-bd9c-1951-d4184f4ae467",
            "format": "uuid"
          },
          "addressLines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The address lines for the address. Example: 1 Rocket Road"
          },
          "locality": {
            "type": "string",
            "description": "The town/locality of the address. Example: Hawthorne",
            "nullable": true
          },
          "administrativeArea": {
            "type": "string",
            "description": "The administrative area of the address. Example: California",
            "nullable": true
          },
          "administrativeAreaCode": {
            "type": "string",
            "description": "The administrative area code of the address. Example: CA"
          },
          "region": {
            "type": "string",
            "description": "The region of the address. Example: United States",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "description": "The region code of the address. Example: US"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address. Example: 90250"
          },
          "metadata": {
            "type": "string",
            "description": "Optional field that can be used to store information about the address for external purposes",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "description": "A user readable address. Example: 1 Rocket Road, Hawthorne, CA 90250-6844, US"
          },
          "latitude": {
            "type": "number",
            "description": "The latitude of the address: Example 33.92",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of the address. Example: -118.32",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AddressResponsePaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddressResponsePaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/AddressResponsePaginated"
          }
        },
        "additionalProperties": false
      },
      "AddressResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/AddressResponse"
          }
        },
        "additionalProperties": false
      },
      "AddressUpdateRequest": {
        "required": [
          "addressLines",
          "addressReferenceId",
          "administrativeAreaCode",
          "formattedAddress",
          "latitude",
          "longitude",
          "regionCode"
        ],
        "type": "object",
        "properties": {
          "addressLines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The address lines for the address. Example: 1 Rocket Road"
          },
          "locality": {
            "type": "string",
            "description": "The town/locality of the address. Example: Hawthorne",
            "nullable": true
          },
          "administrativeArea": {
            "type": "string",
            "description": "The administrative area of the address. Example: California",
            "nullable": true
          },
          "administrativeAreaCode": {
            "type": "string",
            "description": "The administrative area code of the address. Example: CA"
          },
          "region": {
            "type": "string",
            "description": "The region of the address. Example: United States",
            "nullable": true
          },
          "regionCode": {
            "type": "string",
            "description": "The region code of the address. Example: US"
          },
          "postalCode": {
            "type": "string",
            "description": "The postal code of the address. Example: 90250-6844",
            "nullable": true
          },
          "metadata": {
            "type": "string",
            "description": "Optional field that can be used to store information about the address for external purposes",
            "nullable": true
          },
          "formattedAddress": {
            "type": "string",
            "description": "A user readable address. Example: 1 Rocket Road, Hawthorne, CA 90250-6844, US"
          },
          "latitude": {
            "type": "number",
            "description": "The required latitude of the address. Example: 33.92",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The required longitude of the address. Example: -118.32",
            "format": "double"
          },
          "addressReferenceId": {
            "type": "string",
            "description": "Guid of the Address Reference Identifier for address. Example: 55ec6574-10d8-bd9c-1951-d4184f4ae467",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "AviationMetadataResponse": {
        "type": "object",
        "properties": {
          "tailNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CapacityCheckRequest": {
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "The latitude of the address. Example: 33.92",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "The longitude of the address. Example: -118.32",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "CapacityCheckResponse": {
        "type": "object",
        "properties": {
          "availableCapacity": {
            "type": "integer",
            "description": "The amount of capacity remaining at location",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CapacityCheckResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/CapacityCheckResponse"
          }
        },
        "additionalProperties": false
      },
      "DataBucketType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "Unknown",
          "MobileRestricted",
          "MobileUnrestricted",
          "FixedRestricted",
          "FixedUnrestricted",
          "NonBillable",
          "MobileDeprioritizedLimited",
          "FixedDeprioritizedLimited",
          "Residential",
          "ResidentialLite",
          "Roam"
        ]
      },
      "DataOverageType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32",
        "x-enumNames": [
          "None",
          "PriorityPerGb",
          "DeprioritizedPerGb"
        ]
      },
      "DataServicePlan": {
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "type": "string",
            "nullable": true
          },
          "isMobilePlan": {
            "type": "boolean"
          },
          "activeFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscriptionActiveFrom": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subscriptionEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overageName": {
            "type": "string",
            "nullable": true
          },
          "overageDescription": {
            "type": "string",
            "nullable": true
          },
          "isOptedIntoOverage": {
            "type": "boolean"
          },
          "overageLineDeactivatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "overageLine": {
            "$ref": "#/components/schemas/DataUsageOverageLine"
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "usageLimitGB": {
            "type": "number",
            "format": "double"
          },
          "dataCategoryMapping": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DataBucketType"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataUsageBillingCycle": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "dataUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageBin"
            },
            "nullable": true
          },
          "dailyDataUsages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageDaily"
            },
            "nullable": true
          },
          "overageLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageOverageLine"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataUsageBillingCycleV2": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "dailyDataUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageDailyV2"
            },
            "nullable": true
          },
          "overageLines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageOverageLine"
            },
            "nullable": true
          },
          "totalPriorityGB": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalStandardGB": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalOptInPriorityGB": {
            "type": "number",
            "format": "double",
            "readOnly": true
          },
          "totalNonBillableGB": {
            "type": "number",
            "format": "double",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DataUsageBin": {
        "type": "object",
        "properties": {
          "dataBucket": {
            "$ref": "#/components/schemas/DataBucketType"
          },
          "totalGB": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DataUsageDaily": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "dataUsageBins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageBin"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataUsageDailyV2": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "priorityGB": {
            "type": "number",
            "format": "double"
          },
          "optInPriorityGB": {
            "type": "number",
            "format": "double"
          },
          "standardGB": {
            "type": "number",
            "format": "double"
          },
          "nonBillableGB": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "DataUsageOverageLine": {
        "type": "object",
        "properties": {
          "restricted": {
            "$ref": "#/components/schemas/DataBucketType"
          },
          "unrestricted": {
            "$ref": "#/components/schemas/DataBucketType"
          },
          "pricePerGB": {
            "type": "number",
            "format": "double"
          },
          "usageLimitGB": {
            "type": "number",
            "format": "double"
          },
          "overageAmountGB": {
            "type": "number",
            "format": "double"
          },
          "consumedAmountGB": {
            "type": "number",
            "format": "double"
          },
          "overagePrice": {
            "type": "number",
            "format": "double"
          },
          "productId": {
            "type": "string",
            "nullable": true
          },
          "dataOverageType": {
            "$ref": "#/components/schemas/DataOverageType"
          }
        },
        "additionalProperties": false
      },
      "DataUsageResponse": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "assetNumber": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "billingCycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageBillingCycle"
            },
            "nullable": true
          },
          "servicePlan": {
            "$ref": "#/components/schemas/DataServicePlan"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DataUsageResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/DataUsageResponse"
          }
        },
        "additionalProperties": false
      },
      "OptInPeriodResponse": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "nullable": true
          },
          "activatedBySubjectId": {
            "type": "string",
            "nullable": true
          },
          "activatedDate": {
            "type": "string",
            "format": "date-time"
          },
          "deactivatedBySubjectId": {
            "type": "string",
            "nullable": true
          },
          "deactivatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OptInPeriodResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/OptInPeriodResponse"
          }
        },
        "additionalProperties": false
      },
      "PartialPeriodResponse": {
        "type": "object",
        "properties": {
          "productReferenceId": {
            "type": "string",
            "description": "The unique product identifier"
          },
          "periodStart": {
            "type": "string",
            "description": "The timestamp of the start of the partial period",
            "format": "date-time"
          },
          "periodEnd": {
            "type": "string",
            "description": "The timestamp of the end of the partial period",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "PartialPeriodResponseIEnumerableServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartialPeriodResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QueryBillingCycleRequest": {
        "type": "object",
        "properties": {
          "serviceLinesFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "previousBillingCycles": {
            "type": "integer",
            "format": "int32"
          },
          "queryStartDateParam": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageLimit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RouterConfigRequest": {
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "routerConfigJson": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RouterConfigResponse": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Account Number this config is stored under."
          },
          "configId": {
            "type": "string",
            "description": "Config Id."
          },
          "nickname": {
            "type": "string",
            "description": "Nickname for this config. Must be less than 100 characters."
          },
          "routerConfigJson": {
            "type": "string",
            "description": "Config in JSON format."
          }
        },
        "additionalProperties": false
      },
      "RouterConfigResponsePaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouterConfigResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RouterConfigResponsePaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/RouterConfigResponsePaginated"
          }
        },
        "additionalProperties": false
      },
      "RouterConfigResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/RouterConfigResponse"
          }
        },
        "additionalProperties": false
      },
      "RouterResponse": {
        "type": "object",
        "properties": {
          "routerId": {
            "type": "string",
            "description": "Router Id."
          },
          "nickname": {
            "type": "string",
            "description": "Nickname of the router."
          },
          "accountNumber": {
            "type": "string",
            "description": "Account Number this router is bonded to."
          },
          "userTerminalId": {
            "type": "string",
            "description": "User terminal Id this router is bonded to."
          },
          "configId": {
            "type": "string",
            "description": "Router config this router is assigned to, or empty if no config assigned."
          },
          "directLinkToDish": {
            "type": "boolean",
            "description": "True if this router is known to be directly connected to a user terminal."
          },
          "hardwareVersion": {
            "type": "string",
            "description": "Hardware version of the router: 'v1', 'v2', or 'v3'."
          },
          "lastBonded": {
            "type": "string",
            "description": "Last time the router bonded to a user terminal",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RouterResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/RouterResponse"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineCreateRequest": {
        "required": [
          "addressReferenceId",
          "productReferenceId"
        ],
        "type": "object",
        "properties": {
          "addressReferenceId": {
            "type": "string",
            "description": "Address Reference ID to associate with the service line. Example: 55ec6574-10d8-bd9c-1951-d4184f4ae467",
            "format": "uuid"
          },
          "productReferenceId": {
            "type": "string",
            "description": "Subscription Product ID to associate with the service line. Example: business-subscription-100"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineDataUsageForBillingCycles": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "serviceLineNumber": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "billingCycles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataUsageBillingCycleV2"
            },
            "nullable": true
          },
          "servicePlan": {
            "$ref": "#/components/schemas/DataServicePlan"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceLineDataUsageForBillingCyclesPaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceLineDataUsageForBillingCycles"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineDataUsageForBillingCyclesPaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/ServiceLineDataUsageForBillingCyclesPaginated"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineResponse": {
        "type": "object",
        "properties": {
          "addressReferenceId": {
            "type": "string",
            "description": "Address Reference ID of the address associated with the service line. Example: 55ec6574-10d8-bd9c-1951-d4184f4ae467",
            "format": "uuid"
          },
          "serviceLineNumber": {
            "type": "string",
            "description": "The Service Line Number. Example: AST-511274-31364-54"
          },
          "nickname": {
            "type": "string",
            "description": "A user-defined nickname for this service line",
            "nullable": true
          },
          "productReferenceId": {
            "type": "string",
            "description": "The unique product identifier"
          },
          "delayedProductId": {
            "type": "string",
            "description": "Scheduled product change for next bill date",
            "nullable": true
          },
          "optInProductId": {
            "type": "string",
            "description": "Opt-in product id, opted out if empty",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the subscription. This is in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "The service line deactivation date, which only appears if the service line is deactivated. This is in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "publicIp": {
            "type": "boolean",
            "description": "Indicates if service line is public IP"
          },
          "active": {
            "type": "boolean",
            "description": "Indicates if service line is active"
          },
          "aviationMetadata": {
            "$ref": "#/components/schemas/AviationMetadataResponse"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineResponsePaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceLineResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineResponsePaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/ServiceLineResponsePaginated"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/ServiceLineResponse"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineSetPublicIpRequest": {
        "required": [
          "publicIp"
        ],
        "type": "object",
        "properties": {
          "publicIp": {
            "type": "boolean",
            "description": "If public IP should be enabled or not"
          }
        },
        "additionalProperties": false
      },
      "ServiceLineUpdateNicknameRequest": {
        "required": [
          "nickname"
        ],
        "type": "object",
        "properties": {
          "nickname": {
            "type": "string",
            "description": "New nickname for the existing service line"
          }
        },
        "additionalProperties": false
      },
      "ServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionProductResponse": {
        "type": "object",
        "properties": {
          "productReferenceId": {
            "type": "string",
            "description": "The unique product identifier"
          },
          "name": {
            "type": "string",
            "description": "Name of the product"
          },
          "price": {
            "type": "number",
            "description": "Monthly price",
            "format": "double"
          },
          "isoCurrencyCode": {
            "type": "string",
            "description": "Currency code for the price"
          },
          "isSla": {
            "type": "boolean",
            "description": "If Product Has SLA"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionProductResponsePaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionProductResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionProductResponsePaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/SubscriptionProductResponsePaginated"
          }
        },
        "additionalProperties": false
      },
      "UpdateDefaultConfigRequest": {
        "required": [
          "configId"
        ],
        "type": "object",
        "properties": {
          "configId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateSandboxClientRequest": {
        "required": [
          "clientId",
          "expiry",
          "sandboxId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string",
            "description": "Identifier of the client to add or remove from a sandbox."
          },
          "sandboxId": {
            "type": "integer",
            "description": "Identifier used to separate sandbox environments. Per-client sandboxing is shared within the same SandboxId.",
            "format": "int32"
          },
          "expiry": {
            "type": "string",
            "description": "Expiry of the sandbox state as a UTC date time.",
            "format": "date-time"
          },
          "routerId": {
            "type": "string",
            "description": "Router to immediately update.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateSandboxRequest": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "If sandboxed clients will be restricted to the sandbox domain allow list."
          }
        },
        "additionalProperties": false
      },
      "UpdateSandboxResponse": {
        "required": [
          "configIds"
        ],
        "type": "object",
        "properties": {
          "configIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of updated router configurations."
          }
        },
        "additionalProperties": false
      },
      "UpdateSandboxResponseServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/UpdateSandboxResponse"
          }
        },
        "additionalProperties": false
      },
      "UserTerminalResponse": {
        "type": "object",
        "properties": {
          "userTerminalId": {
            "type": "string",
            "description": "User Terminal ID. This ID is not printed anywhere on the kit or hardware. Example: 00020900-002220cc-225b9199"
          },
          "nickname": {
            "type": "string",
            "description": "Nickname of the user terminal."
          },
          "kitSerialNumber": {
            "type": "string",
            "description": "Kit Serial Number. This ID can be found on the box that the hardware came in. Example: KIT00142069"
          },
          "dishSerialNumber": {
            "type": "string",
            "description": "Dish Serial Number. This ID can be found on the dish itself. Example: 2DHT00542069"
          },
          "serviceLineNumber": {
            "type": "string",
            "description": "The service line the user terminal is assoicated with if it has service, Example: AST-511274-31364-54",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Indicates if user terminal is active"
          },
          "routers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RouterResponse"
            },
            "description": "Routers currently bonded to this UT"
          }
        },
        "additionalProperties": false
      },
      "UserTerminalResponsePaginated": {
        "type": "object",
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "isLastPage": {
            "type": "boolean"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTerminalResponse"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UserTerminalResponsePaginatedServiceResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationResult"
            },
            "nullable": true,
            "readOnly": true
          },
          "information": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "isValid": {
            "type": "boolean",
            "readOnly": true
          },
          "content": {
            "$ref": "#/components/schemas/UserTerminalResponsePaginated"
          }
        },
        "additionalProperties": false
      },
      "ValidationResult": {
        "type": "object",
        "properties": {
          "memberNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}